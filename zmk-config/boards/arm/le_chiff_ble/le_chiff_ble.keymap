/*
 * Copyright (c) 2021 @moritz-john
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define EXT 1
#define FUN 2
#define SYM 3






/ {
	
	keymap {
		compatible = "zmk,keymap";

//	►►	𝟬 𝗕𝗮𝘀𝗲 - ColemakDH
//		╔═════════════════════════════╗     ╔═════════════════════════════╗
//		║  Q  |  W  |  F  |  P  |  B  ║     ║  J  |  L  |  U  |  Y  |  '  ║
//		║  A  |  R  |  S  |  T  |  G  ║ ___ ║  M  |  N  |  E  |  I  |  O  ║
//		║  Z  |  X  |  C  |  D  |  V  ║     ║  K  |  H  |  ,  |  .  |  /  ║
//		╚═════════╗   Ext   |  Shift  ║     ║  Space  |   Sym   ╔═════════╝
//		          ╚═══════════════════╝     ╚═══════════════════╝
//
		base { 	
			label = "ColemakDH";

			bindings = <
			&kp Q	&kp W	&kp F	&kp P   &kp B						&kp J	&kp L	&kp U		&kp Y	&kp SQT
			&kp A	&kp R	&kp S	&kp T	&kp	G						&kp M	&kp N	&kp E		&kp I	&kp O
			&kp Z	&kp X	&kp C	&kp D   &kp V						&kp K	&kp H	&kp COMMA	&kp DOT	&kp FSLH
									&mo EXT	&kp LEFT_SHIFT				&kp SPACE	&none
			>;
		};

//	►►	𝟭 Extend Layer
//		╔═════════════════════════════╗     ╔═════════════════════════════╗
//		║ Esc | Bk  | Fnd | Fw  | Ins ║     ║ PGUP| HOME|  ↑  | END | UDO ║
//		║ ALT | WIN | SHFT| CTRL| RA  ║ ___ ║ PGDO|  ←  |  ↓  |  →  | Del ║
//		║ C-Z | C-X | C-C | WIN | C-V ║     ║ Prt | Bksp| Tab |     | Ret ║
//		╚═════════╗  XXXXX  |         ║     ║  Return |         ╔═════════╝
//		          ╚═══════════════════╝     ╚═══════════════════╝
		extend {
			label = "Extend Layer";

			bindings = <
			&kp ESC		&kp LC(Z)	&kp LC(F)	&kp LC(Y)	&kp	INS				&kp PG_UP 	&kp HOME	&kp UP		&kp END		&kp CAPS
			&sk LALT	&sk LGUI	&sk LSHFT	&sk LCTRL	&sk RIGHT_ALT		&kp PG_DN	&kp LEFT	&kp DOWN	&kp RIGHT	&kp DEL
			&kp LC(Z)	&kp LC(X)	&kp LC(C)	&kp LGUI	&kp LC(V)			&kp PSCRN	&kp BSPC	&kp TAB		&none		&kp RET
												&none		&none				&kp RET		&none
			>;
		};

// //	►►	𝟮 Function Layer
// //		╔═════════════════════════════╗     ╔═════════════════════════════╗
// //		║ STP | <<  | >/p | >>  |     ║     ║ F12 | F7  | F8  | F9  | C+  ║
// //		║ ALT | WIN | SHFT| CTRL|     ║ ___ ║ F11 | F4  | F5  | F6  | C-  ║
// //		║ Mute| --  | CS-C| ++  | CS-V║     ║ F10 | F1  | F2  | F3  | C0  ║
// //		╚═════════╗  XXXXX  |         ║     ║         |  XXXXX  ╔═════════╝
// //		          ╚═══════════════════╝     ╚═══════════════════╝
// 		functions {
// 			label = "Functions";

// 			bindings = <
// 			&kp COMMA	&kp N7	&kp N8	&kp N9		&kp DOT				&kp RBRC	&none		&none		&none		&none
// 			&kp SEMI	&kp N4	&kp N5	&kp N6		&kp EQL				&kp RPAR	&kp RSHFT	&kp RCTRL	&kp LALT	&kp LGUI
// 			&kp GRAVE	&kp N1	&kp N2	&kp N3		&kp BSLH			&kp RBKT	&none		&none		&none		&none
// 										&kp MINUS	&kp N0				&none		&none
// 			>;
// 		};

// //	►►	𝟯 𝗦𝘆𝗺𝗯𝗼𝗹𝘀 
// //		╔═════════════════════════════╗     ╔═════════════════════════════╗
// //		║  !  |  @  |  #  |  :  |  ;  ║     ║  =  |  7  |  8  |  9  |  +  ║
// //		║  \  |  |  |  {  |  (  |  [  ║ ___ ║  *  |  4  |  5  |  6  |  -  ║
// //		║  -  |  _  |  }  |  )  |  ]  ║     ║  0  |  1  |  2  |  3  |  /  ║
// //		╚═════════╗    _    |         ║     ║         |  XXXXX  ╔═════════╝
// //		          ╚═══════════════════╝     ╚═══════════════════╝
// 		symbols {
// 			label = "Symbols Layer";

// 			bindings = <
// 			&kp LBRC	&kp AMPS	&kp ASTRK	&kp LPAR	&kp RBRC			&none	&none	&none	&reset		&none
// 			&kp COLON	&kp DLLR	&kp PRCT	&kp CRRT	&kp PLUS			&none	&none	&none	&reset		&none
// 			&kp TILDE	&kp EXCL	&kp AT		&kp HASH	&kp PIPE			&none	&none	&none	&reset		&none
// 												&kp UNDER		&none				&none	&none		
// 			>;
// 		};
	};
};


//╔═════════════════════════════╗      ╔═════════════════════════════╗
//║  0  |  1  |  2  |  3  |  4  ║      ║  5  |  6  |  7  |  8  |  9  ║
//║ 10  | 11  | 12  | 13  | 14  ║      ║ 15  | 16  | 17  | 18  | 19  ║
//║ 20  | 21  | 22  | 23  | 24  ║      ║ 25  | 26  | 27  | 28  | 39  ║
//╚═════════════╗  30   |  31   ║      ║  32   |  33   ╔═════════════╝
//              ╚═══════════════╝      ╚═══════════════╝





